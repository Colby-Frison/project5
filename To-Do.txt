X is check mark

first hald of main file (project5)

[X] create section to read the file
    [X] open file
    [X] read file 
    [X] close file

[X] store words in onordered map
    [X] store words in tokens seperated by ' ' 
    [X] store frequencies in map
    [] find some way to make sure everything is acually being stored including new lines
    [] see if having numbers in the text file causes any errors

[] Sort unorderedmap by frequencies
    [X] Choose a method of sorting
        - converts to map then multimap where key and value are switched, needs to do this since map can't be sorted by value
    [X] Sort in decreasing order
        [] Figure out if theres a specific method of sorting for tokens that have the same frequency

second hald of main file (project5)

[X] compress the file
    [X] re-open the file
    [X] read file and print index of the token in the map seperated by a space

[X] save encoded data to a txt file
    [X] save list of indicies to a text file
    [] The legend also needs to be output somehow to decoder can access it
__________________________________________________________________________________________________________________________________________________

(project5-decompress)

[] Read encoded text file
    [] Will probably encounter an error where new lines are not implemeneted properly
    [] Porbably going to make \n its own token to make it more simple
        - At the time of writing this words are spereated by new lines OR spaces, I havent gotten to this part
          yet but my guess is when decompressing its not going to work as intended

[] As the txt file is read translate indicies into their token
    [] Either output this with cout or save it to a text file as done before
        - otuput not specified yet, so actual instructions are unclear

[] Addition checker to simply compare new text file to original one


lon

11/18/2024 9:31 am 
 - Just started the program and made to-do list. I tired to account for edge cases, but this project is pretty simple os there isn't 
   a whole lot to worry about
 - With that this is probably the simplest project so far. Its litteraly just reading a file to a  map with words:frequency. I like
   just started and im already almost done. I'll try to finish this in the break later, but we'll see.

12:21 pm 
 - Finished the compression part of the program already, also made it output to a text file, still need to do the decompression part 
   of the program, but I dont think that should be that difficult. I think the hardest part of that will just be actually putting the
   legend of tokens into the txt file efficiently. 
 - I should be able to finsih that by later today, but without the input or output files I dont really know If im doing anyhting 
   correct. 